openapi: 3.0.0
info:
  title: KAIROS Performer Submission REST endpoint API
  description: This is the specification for the KAIROS Performer Submission REST endpoint API, that every performer container implementation will call, to submit the result documents back to the KAIROS Framework. 
  version: '0.1'
servers:
  - url: http://{aws-generated-url} # this is dynamically generated k8s ingress IP on AWS
    description: KAIROS Performer Submission API endpoint url
paths:
  /kairos/submission:
    post:
      summary: Performer submission entry point.
      description: Allows performer to submit a result document from algorithm execution.
      requestBody:
        description: Contains the result document payload to be passed back to the KAIROS Runtime framework. All fields are mandatory.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/submissionMessage'
      responses:
        '200':
          description: OK
  /kairos/hrf:
    post:
      summary: Performer HRF submission entry point.
      description: Allows performer to submit HRF files.
      requestBody:
        description: Contains the HRF file payload to be saved to S3.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/hrfSubmissionMessage'
      responses:
        '200':
          description: OK
        '404':
          description: Missing required fields
components:
  schemas:
    hrfSubmissionMessage:
      type: object
      required:
        - ceid
        - experimenttype
        - file
        - performername
        - runId
        - ta1name
      properties:
        ceid:
          type: string
          example: "ce1002"
        experimenttype:
          $ref: '#/components/schemas/experimentTypes'
        file:
          type: string
          format: binary
        performername:
          type: string
          example: "ibm"
        runId:
          type: string
        ta1name:
          type: string
          example: "sbu"
    submissionMessage:
      type: object
      required:
        - runId
        - performername
        - data
        - ta1name
        - ceid
        - experimenttype
      properties:
        ceid:
          type: string
          example: "ce1002"
        data:
          type: object
          example: "Example result document content to be submitted."
        experimenttype:
          $ref: '#/components/schemas/experimentTypes'
        performername:
          type: string
          example: "ibm"
        runId:
          type: string
        ta1name:
          type: string
          example: "sbu"
    experimentTypes:
      type: string
      enum:
      - task1
      - task2
