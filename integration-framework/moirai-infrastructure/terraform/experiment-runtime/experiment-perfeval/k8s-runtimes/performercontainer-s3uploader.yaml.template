apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{fqexperimentname}}-s3uploader
spec:
  schedule: "*/3 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: s3uploader-kubectl
          nodeSelector:
            kairosnodetype: {{experiment}}-framework
          containers:
          - image: 130602597458.dkr.ecr.us-east-1.amazonaws.com/kairos-runtimes:kairos-s3uploader-1.0 
            name: {{fqexperimentname}}-s3uploader
            imagePullPolicy: Always
            args:
            - /bin/sh
            - -c
            - /scripts/performercontainer-s3uploader.sh {{experimentperformerpath}} {{evaluator}} {{experiment}} {{performer}} {{start_time_id}}
            volumeMounts:
            - mountPath: "{{kairosfsmountpath}}"
              name: kairosfs
            - mountPath: /scripts
              name: performercontainer-s3uploader-script
          restartPolicy: OnFailure
          volumes:
            - name: kairosfs
              persistentVolumeClaim:
                claimName: kairosfilesystem
            - name: performercontainer-s3uploader-script
              configMap:
                name: performercontainer-s3uploader-script
                defaultMode: 0744
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: s3uploader-kubectl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: s3uploader-pods
rules:
  - apiGroups: [""]
    resources:
      - pods/log
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: s3uploader-pods-to-sa
subjects:
  - kind: ServiceAccount
    name: s3uploader-kubectl
    namespace: {{evaluator}}-{{experiment}}-enclave
roleRef:
  kind: Role
  name: s3uploader-pods
  apiGroup: rbac.authorization.k8s.io
---

