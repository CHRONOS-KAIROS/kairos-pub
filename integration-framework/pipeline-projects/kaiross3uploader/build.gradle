apply plugin: 'java'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
}

test {
  useJUnitPlatform()
}

dependencies {
    //compile fileTree(dir: 'libs', include: '*.jar')
    //runtime fileTree(dir: 'libs', include: '*.jar')

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
    compile group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.950'

    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'

    // https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-asl
    compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'

    // https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-mapper-asl
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'

    // https://mvnrepository.com/artifact/org.codehaus.jackson/jackson-core-lgpl
    compile group: 'org.codehaus.jackson', name: 'jackson-core-lgpl', version: '1.9.13'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.0-alpha1'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'

    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    // https://mvnrepository.com/artifact/joda-time/joda-time
    compile group: 'joda-time', name: 'joda-time', version: '2.10.10'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}


sourceSets {
    main {
         java {
              srcDir 'src'
              }
         }
    test {
         java {
              srcDir 'test'
              }
         }
}


jar {
    zip64 = true
 from('src') {
        include '**/*.xml'
 }
     
 manifest {
   attributes(
      'Main-Class': 'com.nextcentury.kairos.performer.RestEntryPoint'
    )
  }  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task copyJar(type: Copy) {
    from jar 
    into projectDir
}

build.dependsOn copyJar
